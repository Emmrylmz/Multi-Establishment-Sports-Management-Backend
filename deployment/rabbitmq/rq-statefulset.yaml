apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: rabbitmq
  namespace: rabbitmq-cluster
spec:
  serviceName: "rabbitmq"
  replicas: 3
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
      - name: rabbitmq
        image: myacrregistry.azurecr.io/rabbitmq:latest
        ports:
        - containerPort: 5672
          name: amqp
        - containerPort: 15672
          name: management
        volumeMounts:
        - name: rabbitmq-data
          mountPath: /var/lib/rabbitmq
        env:
        - name: RABBITMQ_ERLANG_COOKIE
          value: "secret-cookie"
        - name: RABBITMQ_DEFAULT_USER
          value: "admin"
        - name: RABBITMQ_DEFAULT_PASS
          value: "password"
        - name: K8S_HOSTNAME_SUFFIX
          value: ".rabbitmq.rabbitmq-cluster.svc.cluster.local"
      initContainers:
      - name: config-rabbitmq
        image: busybox:1.28
        volumeMounts:
        - mountPath: "/etc/rabbitmq"
          name: rabbitmq-config
        command: ["/bin/sh", "-c"]
        args:
        - |
          cat <<EOF > /etc/rabbitmq/rabbitmq.conf
          loopback_users.guest = false
          listeners.tcp.default = 5672
          management.tcp.port = 15672
          cluster_formation.peer_discovery_backend = k8s
          cluster_formation.k8s.host = kubernetes.default.svc.cluster.local
          cluster_formation.k8s.address_type = hostname
          cluster_formation.node_cleanup.interval = 10
          cluster_formation.node_cleanup.only_log_warning = true
          cluster_partition_handling = autoheal
          feature_flags.enabled = classic_mirrored_queue_version
          EOF
      volumes:
      - name: rabbitmq-config
        emptyDir: {}
  volumeClaimTemplates:
  - metadata:
      name: rabbitmq-data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 1Gi
